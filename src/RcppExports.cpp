// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "CoarsePosteriorSummary_types.h"
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// bayesConjRegNormal
List bayesConjRegNormal(int n_samp, const List& hyperparameters, const NumericVector& Y_, const NumericMatrix X_);
RcppExport SEXP _CoarsePosteriorSummary_bayesConjRegNormal(SEXP n_sampSEXP, SEXP hyperparametersSEXP, SEXP Y_SEXP, SEXP X_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_samp(n_sampSEXP);
    Rcpp::traits::input_parameter< const List& >::type hyperparameters(hyperparametersSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type Y_(Y_SEXP);
    Rcpp::traits::input_parameter< const NumericMatrix >::type X_(X_SEXP);
    rcpp_result_gen = Rcpp::wrap(bayesConjRegNormal(n_samp, hyperparameters, Y_, X_));
    return rcpp_result_gen;
END_RCPP
}
// rmvnorm
NumericMatrix rmvnorm(int nsamples, const NumericVector& mean, const NumericMatrix& covariance);
RcppExport SEXP _CoarsePosteriorSummary_rmvnorm(SEXP nsamplesSEXP, SEXP meanSEXP, SEXP covarianceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nsamples(nsamplesSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type covariance(covarianceSEXP);
    rcpp_result_gen = Rcpp::wrap(rmvnorm(nsamples, mean, covariance));
    return rcpp_result_gen;
END_RCPP
}
// dmvnorm
NumericVector dmvnorm(const NumericMatrix& x, const NumericVector& mean, const NumericMatrix& covariance);
RcppExport SEXP _CoarsePosteriorSummary_dmvnorm(SEXP xSEXP, SEXP meanSEXP, SEXP covarianceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type covariance(covarianceSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvnorm(x, mean, covariance));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CoarsePosteriorSummary_bayesConjRegNormal", (DL_FUNC) &_CoarsePosteriorSummary_bayesConjRegNormal, 4},
    {"_CoarsePosteriorSummary_rmvnorm", (DL_FUNC) &_CoarsePosteriorSummary_rmvnorm, 3},
    {"_CoarsePosteriorSummary_dmvnorm", (DL_FUNC) &_CoarsePosteriorSummary_dmvnorm, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_CoarsePosteriorSummary(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
